// <auto-generated />
using BicycleAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BicycleAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211114025339_fix_context")]
    partial class fix_context
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BicycleAPI.Models.Bicycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BicycleTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRented")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BicycleTypeId");

                    b.ToTable("Bicycles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BicycleTypeId = 1,
                            IsRented = false,
                            Name = "Bicycle1",
                            Price = 200m
                        },
                        new
                        {
                            Id = 2,
                            BicycleTypeId = 2,
                            IsRented = false,
                            Name = "Bicycle2",
                            Price = 250m
                        },
                        new
                        {
                            Id = 3,
                            BicycleTypeId = 2,
                            IsRented = true,
                            Name = "Bicycle3",
                            Price = 230m
                        },
                        new
                        {
                            Id = 4,
                            BicycleTypeId = 1,
                            IsRented = true,
                            Name = "Bicycle4",
                            Price = 300m
                        },
                        new
                        {
                            Id = 5,
                            BicycleTypeId = 1,
                            IsRented = false,
                            Name = "Bicycle5",
                            Price = 220m
                        });
                });

            modelBuilder.Entity("BicycleAPI.Models.BicycleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BicycleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Road"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mountain"
                        });
                });

            modelBuilder.Entity("BicycleAPI.Models.Bicycle", b =>
                {
                    b.HasOne("BicycleAPI.Models.BicycleType", "BicycleType")
                        .WithMany()
                        .HasForeignKey("BicycleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
